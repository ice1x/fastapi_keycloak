version: '3.8'

services:
  postgres:
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U keycloak -d keycloak" ]
      interval: 5s
      timeout: 5s
      retries: 5
    image: postgres:15
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - keycloak_pgdata:/var/lib/postgresql/data
    networks:
      - keycloak_net

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    command: >
      start-dev
      --http-enabled=true
      --hostname-strict=false
      --hostname-strict-https=false
      --spi-x-frame-options-enabled=false
      --spi-cors-allowed-origins="http://localhost:5173 http://localhost:8080"
      -Dkeycloak.security.allow-frame-ancestors="'self' http://localhost:5173 http://localhost:8080"
      -Dkeycloak.profile.feature.scripts=enabled
    environment:
      JAVA_OPTS: "-Xms512m -Xmx1024m -XX:MaxRAMPercentage=70.0"
      KC_HEALTH_ENABLED: "true"
      KC_HOSTNAME: localhost
      KC_HTTP_RELATIVE_PATH: /
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - keycloak_net

  frontend:
    build:
      context: ./frontend
    ports:
      - "5173:5173"
    networks:
      - keycloak_net
    depends_on:
      - keycloak

  fastapi:
    build:
      context: ./backend
    ports:
      - "8000:8000"
    networks:
      - keycloak_net
    depends_on:
      - keycloak

volumes:
  keycloak_pgdata:

networks:
  keycloak_net: